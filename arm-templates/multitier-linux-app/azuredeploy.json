{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "storageType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Standard_GRS",
        "Premium_LRS"
      ]
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_DS1_v2"
    },
    "instanceCount": {
      "type": "int",
      "defaultValue": 3,
      "metadata": {
        "description": "Number of VM instances (1000 or less)."
      },
      "maxValue": 1000
    },
    "vm1Name": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "db1"
    },
    "vm2Name": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "db2"
    },
    "adminUserName": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "azureuser"
    },
    "adminPassword": {
      "type": "securestring"
    },
    "ubuntuOSVersion": {
      "type": "string",
      "defaultValue": "16.04.0-LTS",
      "allowedValues": [
        "12.04.5-LTS",
        "14.04.5-LTS",
        "15.10",
        "16.04.0-LTS"
      ],
      "metadata": {
        "description": "The Ubuntu version for the VM. This will pick a fully patched image of this given Ubuntu version."
      }
    }
  },
  "variables": {
    "RgNameClean": "[toLower(replace(resourceGroup().name,'-', ''))]",
    "StorageName": "[concat(variables('RgNameClean'), uniqueString(resourceGroup().id))]",
    "StorageId": "[resourceId('Microsoft.Storage/storageAccounts', variables('StorageName'))]",
    "VNetName": "[concat(variables('RgNameClean'), '-VNet')]",
    "VNetId": "[resourceId('Microsoft.Network/virtualNetworks', variables('VNetName'))]",
    "VNetPrefix": "10.1.0.0/24",
    "Subnet1Name": "appTier",
    "SubNet1Id": "[concat(variables('VNetId'), '/subnets/', variables('Subnet1Name'))]",
    "Subnet1Prefix": "10.1.0.0/25",
    "Subnet2Name": "dataTier",
    "SubNet2Id": "[concat(variables('VNetId'), '/subnets/', variables('Subnet2Name'))]",
    "Subnet2Prefix": "10.1.0.128/26",
    "Subnet3Name": "dmz",
    "SubNet3Id": "[concat(variables('VNetId'), '/subnets/', variables('Subnet3Name'))]",
    "Subnet3Prefix": "10.1.0.192/27",
    "VM1NicName": "[concat(parameters('vm1Name'), '-nic')]",
    "VM2NicName": "[concat(parameters('vm2Name'), '-nic')]",
    "AvailabilitySetName": "dataTier-as",
    "LBName": "[concat(variables('RgNameClean'), '-LB')]",
    "LBId": "resourceId('Microsoft.Network/loadBalancers', variables('LBName'))",
    "Nsg1Name": "[concat(variables('Subnet1Name'), '-nsg')]",
    "Nsg2Name": "[concat(variables('Subnet2Name'), '-nsg')]",
    "AppGwIpName": "appgw-ip",
    "AppGwIpId": "[resourceId('Microsoft.Network/publicIPAddresses',variables('AppGwIpName'))]",
    "AppGwName": "[concat(variables('RgNameClean'), '-AppGw')]",
    "AppGwId": "[resourceId('Microsoft.Network/applicationGateways',variables('AppGwName'))]",
    "AppGwBEPoolName": "BePool",
    "VMSSName": "[concat(variables('RgNameClean'), '-AppVmss')]"
  },
  "resources": [
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('nsg1Name')]",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "AppTier-nsg"
      },
      "properties": {
        "securityRules": [
          {
            "name": "mysql_rule",
            "properties": {
              "description": "Allow SQL",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "3306",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 120,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('nsg2Name')]",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "DataTier-nsg"
      },
      "properties": {
        "securityRules": [
          {
            "name": "web_rule",
            "properties": {
              "description": "Allow Web",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "80",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 110,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "comments": "## Virtual Network ##",
      "name": "[variables('VNetName')]",
      "type": "Microsoft.Network/virtualNetworks",
      "location": "[resourceGroup().location]",
      "apiVersion": "2016-03-30",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsg1Name'))]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsg2Name'))]"
      ],
      "tags": {
        "displayName": "VNet"
      },
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('VNetPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('Subnet1Name')]",
            "properties": {
              "addressPrefix": "[variables('Subnet1Prefix')]",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsg1Name'))]"
              }
            }
          },
          {
            "name": "[variables('Subnet2Name')]",
            "properties": {
              "addressPrefix": "[variables('Subnet2Prefix')]",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsg2Name'))]"
              }
            }
          },
          {
            "name": "[variables('Subnet3Name')]",
            "properties": {
              "addressPrefix": "[variables('Subnet3Prefix')]"
            }
          }
        ]
      }
    },
    {
      "comments": "## Storage Account ##",
      "name": "[variables('storageName')]",
      "type": "Microsoft.Storage/storageAccounts",
      "location": "[resourceGroup().location]",
      "apiVersion": "2016-01-01",
      "sku": {
        "name": "[parameters('storageType')]"
      },
      "dependsOn": [],
      "tags": {
        "displayName": "Storage"
      },
      "properties": {
        "encryption": {
          "keySource": "Microsoft.Storage",
          "services": {
            "blob": {
              "enabled": true
            }
          }
        }
      },
      "kind": "Storage"
    },
    {
      "comments": "## Load Balancer ##",
      "name": "[variables('LBName')]",
      "type": "Microsoft.Network/loadBalancers",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-05-01-preview",
      "dependsOn": [
        "[variables('VNetId')]"
      ],
      "tags": {
        "displayName": "LB1"
      },
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "lbFrontEnd",
            "properties": {
              "privateIPAddress": "10.1.0.132",
              "privateIPAllocationMethod": "Static",
              "subnet": {
                "id": "[variables('SubNet2Id')]"
              }
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "lbBackEnd"
          }
        ],
        "loadBalancingRules": [
          {
            "properties": {
              "frontendIPConfiguration": {
                "id": "[concat(variables('LBId'), '/frontendIpConfigurations/lbFrontEnd')]"
              },
              "backendAddressPool": {
                "id": "[concat(variables('LBId'), '/backendAddressPools/lbBackEnd')]"
              },
              "probe": {
                "id": "[concat(variables('LBId'), '/probes/lbProbe')]"
              },
              "protocol": "Tcp",
              "frontendPort": 3306,
              "backendPort": 3306,
              "idleTimeoutInMinutes": 15
            },
            "name": "lbrule"
          }
        ],
        "probes": [
          {
            "properties": {
              "protocol": "Tcp",
              "port": 3306,
              "intervalInSeconds": 15,
              "numberOfProbes": 2
            },
            "name": "lbProbe"
          }
        ]
      }
    },
    {
      "comments": "## Network Interface ##",
      "name": "[variables('VM1NicName')]",
      "type": "Microsoft.Network/networkInterfaces",
      "location": "[resourceGroup().location]",
      "apiVersion": "2016-03-30",
      "dependsOn": [
        "[variables('VNetId')]",
        "[variables('LBId')]"
      ],
      "tags": {
        "displayName": "VM1-nic"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('SubNet2Id')]"
              },
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[concat(variables('LBId'), '/backendAddressPools/lbBackEnd')]"
                }
              ]
            }
          }
        ]
      }
    },
    {
      "comments": "## Network Interface ##",
      "name": "[variables('vm2NicName')]",
      "type": "Microsoft.Network/networkInterfaces",
      "location": "[resourceGroup().location]",
      "apiVersion": "2016-03-30",
      "dependsOn": [
        "[variables('VNetId')]",
        "[variables('LBId')]"
      ],
      "tags": {
        "displayName": "VM2-nic"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('SubNet2Id')]"
              },
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[concat(variables('LBId'), '/backendAddressPools/lbBackEnd')]"
                }
              ]
            }
          }
        ]
      }
    },
    {
      "comments": "## Availability Set ##",
      "name": "dataTier-as",
      "type": "Microsoft.Compute/availabilitySets",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "dependsOn": [],
      "tags": {
        "displayName": "DataTier-as"
      },
      "properties": {
        "platformUpdateDomainCount": 5,
        "platformFaultDomainCount": 2
      }
    },
    {
      "comments": "## Virtual Machine ##",
      "name": "[parameters('vm1Name')]",
      "type": "Microsoft.Compute/virtualMachines",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "dependsOn": [
        "[variables('StorageId')]",
        "[resourceId('Microsoft.Compute/availabilitySets', variables('AvailabilitySetName'))]",
        "[resourceId('Microsoft.Network/networkInterfaces', variables('Vm1NicName'))]"
      ],
      "tags": {
        "displayName": "VM1"
      },
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('AvailabilitySetName'))]"
        },
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[parameters('vm1Name')]",
          "adminUsername": "[parameters('adminUserName')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "Canonical",
            "offer": "UbuntuServer",
            "sku": "[parameters('ubuntuOSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "[concat(parameters('vm1Name'), 'OSDisk')]",
            "vhd": {
              "uri": "[concat(reference(variables('StorageId'), '2016-01-01').primaryEndpoints.blob, 'vhds/', parameters('vm1Name'), 'OSDisk.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('VM1NicName'))]"
            }
          ]
        }
      }
    },
    {
      "comments": "## Virtual Machine ##",
      "name": "[parameters('vm2Name')]",
      "type": "Microsoft.Compute/virtualMachines",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "dependsOn": [
        "[variables('StorageId')]",
        "[resourceId('Microsoft.Compute/availabilitySets', variables('AvailabilitySetName'))]",
        "[resourceId('Microsoft.Network/networkInterfaces', variables('Vm2NicName'))]"
      ],
      "tags": {
        "displayName": "VM2"
      },
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('AvailabilitySetName'))]"
        },
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[parameters('vm2Name')]",
          "adminUsername": "[parameters('adminUserName')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "Canonical",
            "offer": "UbuntuServer",
            "sku": "[parameters('ubuntuOSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "[concat(parameters('vm2Name'), 'OSDisk')]",
            "vhd": {
              "uri": "[concat(reference(variables('storageId'), '2016-01-01').primaryEndpoints.blob, 'vhds/', parameters('vm2Name'), 'OSDisk.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('VM2NicName'))]"
            }
          ]
        }
      }
    },
    {
      "comments": "## Public IP ##",
      "name": "[variables('AppGwIpName')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "location": "[resourceGroup().location]",
      "apiVersion": "2016-03-30",
      "dependsOn": [],
      "tags": {
        "displayName": "APPGW-ip"
      },
      "properties": {
        "publicIPAllocationMethod": "Dynamic"
      }
    },
    {
      "comments": "## Application Gateway ##",
      "name": "[variables('AppGwName')]",
      "type": "Microsoft.Network/applicationGateways",
      "location": "[resourceGroup().location]",
      "apiVersion": "2017-03-01",
      "dependsOn": [
        "[variables('VNetId')]",
        "[variables('AppGwIpId')]"
      ],
      "properties": {
        "sku": {
          "name": "Standard_Small",
          "tier": "Standard",
          "capacity": "2"
        },
        "gatewayIPConfigurations": [
          {
            "name": "appGwIpConfig",
            "properties": {
              "subnet": {
                "id": "[variables('SubNet3Id')]"
              }
            }
          }
        ],
        "frontendIPConfigurations": [
          {
            "name": "appGwFrontendIP",
            "properties": {
              "PublicIPAddress": {
                "id": "[variables('AppGwIpId')]"
              }
            }
          }
        ],
        "frontendPorts": [
          {
            "name": "AppGwFEPort",
            "properties": {
              "Port": "80"
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "[variables('AppGwBEPoolName')]"
          }
        ],
        "backendHttpSettingsCollection": [
          {
            "name": "appGwBackendHttpSettings",
            "properties": {
              "Port": "80",
              "Protocol": "Http",
              "CookieBasedAffinity": "Disabled"
            }
          }
        ],
        "httpListeners": [
          {
            "name": "appGwHttpListener",
            "properties": {
              "FrontendIPConfiguration": {
                "Id": "[concat(variables('AppGwId'), '/frontendIPConfigurations/appGwFrontendIP')]"
              },
              "FrontendPort": {
                "Id": "[concat(variables('AppGwId'), '/frontendPorts/AppGwFEPort')]"
              },
              "Protocol": "Http",
              "SslCertificate": null
            }
          }
        ],
        "requestRoutingRules": [
          {
            "Name": "rule1",
            "properties": {
              "RuleType": "Basic",
              "httpListener": {
                "id": "[concat(variables('AppGwId'), '/httpListeners/appGwHttpListener')]"
              },
              "backendAddressPool": {
                "id": "[concat(variables('AppGwId'), '/backendAddressPools/', variables('AppGwBEPoolName'))]"
              },
              "backendHttpSettings": {
                "id": "[concat(variables('AppGwId'), '/backendHttpSettingsCollection/appGwBackendHttpSettings')]"
              }
            }
          }
        ]
      }
    },
    {
      "comments": "## VM Scale Set ##",
      "type": "Microsoft.Compute/virtualMachineScaleSets",
      "name": "[variables('VMSSName')]",
      "location": "[resourceGroup().location]",
      "apiVersion": "2016-04-30-preview",
      "dependsOn": [
        "[variables('VNetId')]",
        "[variables('AppGwId')]"
      ],
      "sku": {
        "name": "[parameters('vmSize')]",
        "tier": "Standard",
        "capacity": "[parameters('instanceCount')]"
      },
      "properties": {
        "overprovision": true,
        "singlePlacementGroup": true,
        "upgradePolicy": {
          "mode": "Manual"
        },
        "virtualMachineProfile": {
          "storageProfile": {
            "osDisk": {
              "createOption": "FromImage",
              "caching": "ReadOnly"
            },
            "dataDisks": [],
            "imageReference": {
              "publisher": "Canonical",
              "offer": "UbuntuServer",
              "sku": "[parameters('ubuntuOSVersion')]",
              "version": "latest"
            }
          },
          "osProfile": {
            "computerNamePrefix": "[variables('RgNameClean')]",
            "adminUsername": "[parameters('adminUsername')]",
            "adminPassword": "[parameters('adminPassword')]"
          },
          "networkProfile": {
            "networkInterfaceConfigurations": [
              {
                "name": "[concat(variables('vmssName'), '-nic')]",
                "properties": {
                  "primary": true,
                  "ipConfigurations": [
                    {
                      "name": "ipconfig",
                      "properties": {
                        "subnet": {
                          "id": "[variables('SubNet1Id')]"
                        },
                        "ApplicationGatewayBackendAddressPools": [
                          {
                            "id": "[concat(variables('AppGwId'), '/backendAddressPools/', variables('AppGwBEPoolName'))]"
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      }
    }
  ],
  "outputs": {}
}
